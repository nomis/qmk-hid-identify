/*
Copyright 2021,2024  Simon Arlott

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

@Library("uuid")
import uk.uuid.jenkins.pipeline.Cron
import uk.uuid.jenkins.pipeline.Email

def meson_opts() {
	return [
		linux: "-Db_lto=true",
		windows: "--cross cross64.ini",
	][PLATFORM]
}

pipeline {
	agent none
	triggers {
		cron("${Cron.schedule(this)}")
	}
	stages {
		stage("Application") {
			matrix {
				axes {
					axis {
						name "PLATFORM"
						values "linux", "windows"
					}
				}
				agent {
					dockerfile {
						label "Linux && Docker"
						dir ".uuid-uk"
						filename "Dockerfile"
						args "--cap-drop=ALL --security-opt=no-new-privileges=true"
					}
				}
				environment {
					TMPDIR="${WORKSPACE_TMP}"
					DESTDIR="${WORKSPACE_TMP}/DESTDIR"
				}
				stages {
					stage("Checkout") {
						steps {
							sh "git clean -fdx"
						}
					}
					stage("Build") {
						steps {
							dir(PLATFORM) {
								sh "meson setup --buildtype=release build/ --unity on --unity-size 10000 ${meson_opts()}"
								sh "ninja -C build/ -j 1"
							}
						}
						post {
							failure {
								sh "cat ${PLATFORM}/build/meson-logs/meson-log.txt"
							}
						}
					}
					stage("Install") {
						steps {
							dir(PLATFORM) {
								sh "ninja -C build/ -j 1 install"
							}
						}
					}
				}
				post {
					cleanup {
						cleanWs()
					}
				}
			}
		}
	}
	post {
		always {
			script {
				Email.send(this)
			}
		}
	}
}
